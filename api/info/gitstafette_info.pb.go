// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: api/info/gitstafette_info.proto

package info

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type InstanceType int32

const (
	InstanceType_RELAY     InstanceType = 0
	InstanceType_SERVER    InstanceType = 1
	InstanceType_CLIENT    InstanceType = 2
	InstanceType_HUB       InstanceType = 3
	InstanceType_DISCOVERY InstanceType = 4
	InstanceType_EXPLORER  InstanceType = 5
)

// Enum value maps for InstanceType.
var (
	InstanceType_name = map[int32]string{
		0: "RELAY",
		1: "SERVER",
		2: "CLIENT",
		3: "HUB",
		4: "DISCOVERY",
		5: "EXPLORER",
	}
	InstanceType_value = map[string]int32{
		"RELAY":     0,
		"SERVER":    1,
		"CLIENT":    2,
		"HUB":       3,
		"DISCOVERY": 4,
		"EXPLORER":  5,
	}
)

func (x InstanceType) Enum() *InstanceType {
	p := new(InstanceType)
	*p = x
	return p
}

func (x InstanceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InstanceType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_info_gitstafette_info_proto_enumTypes[0].Descriptor()
}

func (InstanceType) Type() protoreflect.EnumType {
	return &file_api_info_gitstafette_info_proto_enumTypes[0]
}

func (x InstanceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InstanceType.Descriptor instead.
func (InstanceType) EnumDescriptor() ([]byte, []int) {
	return file_api_info_gitstafette_info_proto_rawDescGZIP(), []int{0}
}

type GetInfoRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ClientId       string                 `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	ClientEndpoint string                 `protobuf:"bytes,2,opt,name=client_endpoint,json=clientEndpoint,proto3" json:"client_endpoint,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetInfoRequest) Reset() {
	*x = GetInfoRequest{}
	mi := &file_api_info_gitstafette_info_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInfoRequest) ProtoMessage() {}

func (x *GetInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_info_gitstafette_info_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInfoRequest.ProtoReflect.Descriptor instead.
func (*GetInfoRequest) Descriptor() ([]byte, []int) {
	return file_api_info_gitstafette_info_proto_rawDescGZIP(), []int{0}
}

func (x *GetInfoRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *GetInfoRequest) GetClientEndpoint() string {
	if x != nil {
		return x.ClientEndpoint
	}
	return ""
}

type GetInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Alive         bool                   `protobuf:"varint,1,opt,name=alive,proto3" json:"alive,omitempty"`
	InstanceType  InstanceType           `protobuf:"varint,2,opt,name=instance_type,json=instanceType,proto3,enum=info.InstanceType" json:"instance_type,omitempty"`
	Version       string                 `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	Name          string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Server        *ServerInfo            `protobuf:"bytes,5,opt,name=server,proto3" json:"server,omitempty"`
	Relay         *ServerInfo            `protobuf:"bytes,6,opt,name=relay,proto3,oneof" json:"relay,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetInfoResponse) Reset() {
	*x = GetInfoResponse{}
	mi := &file_api_info_gitstafette_info_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInfoResponse) ProtoMessage() {}

func (x *GetInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_info_gitstafette_info_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInfoResponse.ProtoReflect.Descriptor instead.
func (*GetInfoResponse) Descriptor() ([]byte, []int) {
	return file_api_info_gitstafette_info_proto_rawDescGZIP(), []int{1}
}

func (x *GetInfoResponse) GetAlive() bool {
	if x != nil {
		return x.Alive
	}
	return false
}

func (x *GetInfoResponse) GetInstanceType() InstanceType {
	if x != nil {
		return x.InstanceType
	}
	return InstanceType_RELAY
}

func (x *GetInfoResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *GetInfoResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetInfoResponse) GetServer() *ServerInfo {
	if x != nil {
		return x.Server
	}
	return nil
}

func (x *GetInfoResponse) GetRelay() *ServerInfo {
	if x != nil {
		return x.Relay
	}
	return nil
}

type ServerInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hostname      string                 `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Ip            string                 `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	Port          string                 `protobuf:"bytes,3,opt,name=port,proto3" json:"port,omitempty"`
	Protocol      string                 `protobuf:"bytes,4,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Repositories  *string                `protobuf:"bytes,5,opt,name=repositories,proto3,oneof" json:"repositories,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerInfo) Reset() {
	*x = ServerInfo{}
	mi := &file_api_info_gitstafette_info_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerInfo) ProtoMessage() {}

func (x *ServerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_info_gitstafette_info_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerInfo.ProtoReflect.Descriptor instead.
func (*ServerInfo) Descriptor() ([]byte, []int) {
	return file_api_info_gitstafette_info_proto_rawDescGZIP(), []int{2}
}

func (x *ServerInfo) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *ServerInfo) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *ServerInfo) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

func (x *ServerInfo) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *ServerInfo) GetRepositories() string {
	if x != nil && x.Repositories != nil {
		return *x.Repositories
	}
	return ""
}

var File_api_info_gitstafette_info_proto protoreflect.FileDescriptor

const file_api_info_gitstafette_info_proto_rawDesc = "" +
	"\n" +
	"\x1fapi/info/gitstafette_info.proto\x12\x04info\"V\n" +
	"\x0eGetInfoRequest\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\tR\bclientId\x12'\n" +
	"\x0fclient_endpoint\x18\x02 \x01(\tR\x0eclientEndpoint\"\xef\x01\n" +
	"\x0fGetInfoResponse\x12\x14\n" +
	"\x05alive\x18\x01 \x01(\bR\x05alive\x127\n" +
	"\rinstance_type\x18\x02 \x01(\x0e2\x12.info.InstanceTypeR\finstanceType\x12\x18\n" +
	"\aversion\x18\x03 \x01(\tR\aversion\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\x12(\n" +
	"\x06server\x18\x05 \x01(\v2\x10.info.ServerInfoR\x06server\x12+\n" +
	"\x05relay\x18\x06 \x01(\v2\x10.info.ServerInfoH\x00R\x05relay\x88\x01\x01B\b\n" +
	"\x06_relay\"\xa2\x01\n" +
	"\n" +
	"ServerInfo\x12\x1a\n" +
	"\bhostname\x18\x01 \x01(\tR\bhostname\x12\x0e\n" +
	"\x02ip\x18\x02 \x01(\tR\x02ip\x12\x12\n" +
	"\x04port\x18\x03 \x01(\tR\x04port\x12\x1a\n" +
	"\bprotocol\x18\x04 \x01(\tR\bprotocol\x12'\n" +
	"\frepositories\x18\x05 \x01(\tH\x00R\frepositories\x88\x01\x01B\x0f\n" +
	"\r_repositories*W\n" +
	"\fInstanceType\x12\t\n" +
	"\x05RELAY\x10\x00\x12\n" +
	"\n" +
	"\x06SERVER\x10\x01\x12\n" +
	"\n" +
	"\x06CLIENT\x10\x02\x12\a\n" +
	"\x03HUB\x10\x03\x12\r\n" +
	"\tDISCOVERY\x10\x04\x12\f\n" +
	"\bEXPLORER\x10\x052@\n" +
	"\x04Info\x128\n" +
	"\aGetInfo\x12\x14.info.GetInfoRequest\x1a\x15.info.GetInfoResponse\"\x00B*Z(github.com/joostvdg/gitstafette/api/infob\x06proto3"

var (
	file_api_info_gitstafette_info_proto_rawDescOnce sync.Once
	file_api_info_gitstafette_info_proto_rawDescData []byte
)

func file_api_info_gitstafette_info_proto_rawDescGZIP() []byte {
	file_api_info_gitstafette_info_proto_rawDescOnce.Do(func() {
		file_api_info_gitstafette_info_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_info_gitstafette_info_proto_rawDesc), len(file_api_info_gitstafette_info_proto_rawDesc)))
	})
	return file_api_info_gitstafette_info_proto_rawDescData
}

var file_api_info_gitstafette_info_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_info_gitstafette_info_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_api_info_gitstafette_info_proto_goTypes = []any{
	(InstanceType)(0),       // 0: info.InstanceType
	(*GetInfoRequest)(nil),  // 1: info.GetInfoRequest
	(*GetInfoResponse)(nil), // 2: info.GetInfoResponse
	(*ServerInfo)(nil),      // 3: info.ServerInfo
}
var file_api_info_gitstafette_info_proto_depIdxs = []int32{
	0, // 0: info.GetInfoResponse.instance_type:type_name -> info.InstanceType
	3, // 1: info.GetInfoResponse.server:type_name -> info.ServerInfo
	3, // 2: info.GetInfoResponse.relay:type_name -> info.ServerInfo
	1, // 3: info.Info.GetInfo:input_type -> info.GetInfoRequest
	2, // 4: info.Info.GetInfo:output_type -> info.GetInfoResponse
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_api_info_gitstafette_info_proto_init() }
func file_api_info_gitstafette_info_proto_init() {
	if File_api_info_gitstafette_info_proto != nil {
		return
	}
	file_api_info_gitstafette_info_proto_msgTypes[1].OneofWrappers = []any{}
	file_api_info_gitstafette_info_proto_msgTypes[2].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_info_gitstafette_info_proto_rawDesc), len(file_api_info_gitstafette_info_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_info_gitstafette_info_proto_goTypes,
		DependencyIndexes: file_api_info_gitstafette_info_proto_depIdxs,
		EnumInfos:         file_api_info_gitstafette_info_proto_enumTypes,
		MessageInfos:      file_api_info_gitstafette_info_proto_msgTypes,
	}.Build()
	File_api_info_gitstafette_info_proto = out.File
	file_api_info_gitstafette_info_proto_goTypes = nil
	file_api_info_gitstafette_info_proto_depIdxs = nil
}
