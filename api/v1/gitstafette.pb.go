// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: api/v1/gitstafette.proto

package gitstafette_v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WebhookEventStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      string                 `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	RepositoryId  string                 `protobuf:"bytes,2,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WebhookEventStatusRequest) Reset() {
	*x = WebhookEventStatusRequest{}
	mi := &file_api_v1_gitstafette_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WebhookEventStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebhookEventStatusRequest) ProtoMessage() {}

func (x *WebhookEventStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_gitstafette_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebhookEventStatusRequest.ProtoReflect.Descriptor instead.
func (*WebhookEventStatusRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_gitstafette_proto_rawDescGZIP(), []int{0}
}

func (x *WebhookEventStatusRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *WebhookEventStatusRequest) GetRepositoryId() string {
	if x != nil {
		return x.RepositoryId
	}
	return ""
}

type WebhookEventStatusesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      string                 `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WebhookEventStatusesRequest) Reset() {
	*x = WebhookEventStatusesRequest{}
	mi := &file_api_v1_gitstafette_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WebhookEventStatusesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebhookEventStatusesRequest) ProtoMessage() {}

func (x *WebhookEventStatusesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_gitstafette_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebhookEventStatusesRequest.ProtoReflect.Descriptor instead.
func (*WebhookEventStatusesRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_gitstafette_proto_rawDescGZIP(), []int{1}
}

func (x *WebhookEventStatusesRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

type WebhookEventStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServerId      string                 `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	Count         uint32                 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	RepositoryId  string                 `protobuf:"bytes,3,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
	Status        string                 `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WebhookEventStatusResponse) Reset() {
	*x = WebhookEventStatusResponse{}
	mi := &file_api_v1_gitstafette_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WebhookEventStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebhookEventStatusResponse) ProtoMessage() {}

func (x *WebhookEventStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_gitstafette_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebhookEventStatusResponse.ProtoReflect.Descriptor instead.
func (*WebhookEventStatusResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_gitstafette_proto_rawDescGZIP(), []int{2}
}

func (x *WebhookEventStatusResponse) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *WebhookEventStatusResponse) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *WebhookEventStatusResponse) GetRepositoryId() string {
	if x != nil {
		return x.RepositoryId
	}
	return ""
}

func (x *WebhookEventStatusResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type WebhookEventsRequest struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	ClientId            string                 `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	RepositoryId        string                 `protobuf:"bytes,2,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
	LastReceivedEventId uint64                 `protobuf:"varint,3,opt,name=last_received_event_id,json=lastReceivedEventId,proto3" json:"last_received_event_id,omitempty"`
	DurationSecs        uint32                 `protobuf:"varint,4,opt,name=duration_secs,json=durationSecs,proto3" json:"duration_secs,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *WebhookEventsRequest) Reset() {
	*x = WebhookEventsRequest{}
	mi := &file_api_v1_gitstafette_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WebhookEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebhookEventsRequest) ProtoMessage() {}

func (x *WebhookEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_gitstafette_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebhookEventsRequest.ProtoReflect.Descriptor instead.
func (*WebhookEventsRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_gitstafette_proto_rawDescGZIP(), []int{3}
}

func (x *WebhookEventsRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *WebhookEventsRequest) GetRepositoryId() string {
	if x != nil {
		return x.RepositoryId
	}
	return ""
}

func (x *WebhookEventsRequest) GetLastReceivedEventId() uint64 {
	if x != nil {
		return x.LastReceivedEventId
	}
	return 0
}

func (x *WebhookEventsRequest) GetDurationSecs() uint32 {
	if x != nil {
		return x.DurationSecs
	}
	return 0
}

type WebhookEventPushResponse struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	ResponseCode        string                 `protobuf:"bytes,1,opt,name=response_code,json=responseCode,proto3" json:"response_code,omitempty"`
	ResponseDescription string                 `protobuf:"bytes,2,opt,name=response_description,json=responseDescription,proto3" json:"response_description,omitempty"`
	Accepted            bool                   `protobuf:"varint,3,opt,name=accepted,proto3" json:"accepted,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *WebhookEventPushResponse) Reset() {
	*x = WebhookEventPushResponse{}
	mi := &file_api_v1_gitstafette_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WebhookEventPushResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebhookEventPushResponse) ProtoMessage() {}

func (x *WebhookEventPushResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_gitstafette_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebhookEventPushResponse.ProtoReflect.Descriptor instead.
func (*WebhookEventPushResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_gitstafette_proto_rawDescGZIP(), []int{4}
}

func (x *WebhookEventPushResponse) GetResponseCode() string {
	if x != nil {
		return x.ResponseCode
	}
	return ""
}

func (x *WebhookEventPushResponse) GetResponseDescription() string {
	if x != nil {
		return x.ResponseDescription
	}
	return ""
}

func (x *WebhookEventPushResponse) GetAccepted() bool {
	if x != nil {
		return x.Accepted
	}
	return false
}

type WebhookEventPushRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CliendId      string                 `protobuf:"bytes,1,opt,name=cliend_id,json=cliendId,proto3" json:"cliend_id,omitempty"`
	RepositoryId  string                 `protobuf:"bytes,2,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
	WebhookEvent  *WebhookEvent          `protobuf:"bytes,3,opt,name=webhook_event,json=webhookEvent,proto3" json:"webhook_event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WebhookEventPushRequest) Reset() {
	*x = WebhookEventPushRequest{}
	mi := &file_api_v1_gitstafette_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WebhookEventPushRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebhookEventPushRequest) ProtoMessage() {}

func (x *WebhookEventPushRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_gitstafette_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebhookEventPushRequest.ProtoReflect.Descriptor instead.
func (*WebhookEventPushRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_gitstafette_proto_rawDescGZIP(), []int{5}
}

func (x *WebhookEventPushRequest) GetCliendId() string {
	if x != nil {
		return x.CliendId
	}
	return ""
}

func (x *WebhookEventPushRequest) GetRepositoryId() string {
	if x != nil {
		return x.RepositoryId
	}
	return ""
}

func (x *WebhookEventPushRequest) GetWebhookEvent() *WebhookEvent {
	if x != nil {
		return x.WebhookEvent
	}
	return nil
}

type WebhookEventsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WebhookEvents []*WebhookEvent        `protobuf:"bytes,1,rep,name=webhook_events,json=webhookEvents,proto3" json:"webhook_events,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WebhookEventsResponse) Reset() {
	*x = WebhookEventsResponse{}
	mi := &file_api_v1_gitstafette_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WebhookEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebhookEventsResponse) ProtoMessage() {}

func (x *WebhookEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_gitstafette_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebhookEventsResponse.ProtoReflect.Descriptor instead.
func (*WebhookEventsResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_gitstafette_proto_rawDescGZIP(), []int{6}
}

func (x *WebhookEventsResponse) GetWebhookEvents() []*WebhookEvent {
	if x != nil {
		return x.WebhookEvents
	}
	return nil
}

type WebhookEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventId       string                 `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	Body          []byte                 `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	Headers       []*Header              `protobuf:"bytes,3,rep,name=headers,proto3" json:"headers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WebhookEvent) Reset() {
	*x = WebhookEvent{}
	mi := &file_api_v1_gitstafette_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WebhookEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebhookEvent) ProtoMessage() {}

func (x *WebhookEvent) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_gitstafette_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebhookEvent.ProtoReflect.Descriptor instead.
func (*WebhookEvent) Descriptor() ([]byte, []int) {
	return file_api_v1_gitstafette_proto_rawDescGZIP(), []int{7}
}

func (x *WebhookEvent) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *WebhookEvent) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *WebhookEvent) GetHeaders() []*Header {
	if x != nil {
		return x.Headers
	}
	return nil
}

type Header struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Values        string                 `protobuf:"bytes,2,opt,name=values,proto3" json:"values,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Header) Reset() {
	*x = Header{}
	mi := &file_api_v1_gitstafette_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Header) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Header) ProtoMessage() {}

func (x *Header) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_gitstafette_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Header.ProtoReflect.Descriptor instead.
func (*Header) Descriptor() ([]byte, []int) {
	return file_api_v1_gitstafette_proto_rawDescGZIP(), []int{8}
}

func (x *Header) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Header) GetValues() string {
	if x != nil {
		return x.Values
	}
	return ""
}

var File_api_v1_gitstafette_proto protoreflect.FileDescriptor

const file_api_v1_gitstafette_proto_rawDesc = "" +
	"\n" +
	"\x18api/v1/gitstafette.proto\x12\x0egitstafette.v1\"]\n" +
	"\x19WebhookEventStatusRequest\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\tR\bclientId\x12#\n" +
	"\rrepository_id\x18\x02 \x01(\tR\frepositoryId\":\n" +
	"\x1bWebhookEventStatusesRequest\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\tR\bclientId\"\x8c\x01\n" +
	"\x1aWebhookEventStatusResponse\x12\x1b\n" +
	"\tserver_id\x18\x01 \x01(\tR\bserverId\x12\x14\n" +
	"\x05count\x18\x02 \x01(\rR\x05count\x12#\n" +
	"\rrepository_id\x18\x03 \x01(\tR\frepositoryId\x12\x16\n" +
	"\x06status\x18\x04 \x01(\tR\x06status\"\xb2\x01\n" +
	"\x14WebhookEventsRequest\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\tR\bclientId\x12#\n" +
	"\rrepository_id\x18\x02 \x01(\tR\frepositoryId\x123\n" +
	"\x16last_received_event_id\x18\x03 \x01(\x04R\x13lastReceivedEventId\x12#\n" +
	"\rduration_secs\x18\x04 \x01(\rR\fdurationSecs\"\x8e\x01\n" +
	"\x18WebhookEventPushResponse\x12#\n" +
	"\rresponse_code\x18\x01 \x01(\tR\fresponseCode\x121\n" +
	"\x14response_description\x18\x02 \x01(\tR\x13responseDescription\x12\x1a\n" +
	"\baccepted\x18\x03 \x01(\bR\baccepted\"\x9e\x01\n" +
	"\x17WebhookEventPushRequest\x12\x1b\n" +
	"\tcliend_id\x18\x01 \x01(\tR\bcliendId\x12#\n" +
	"\rrepository_id\x18\x02 \x01(\tR\frepositoryId\x12A\n" +
	"\rwebhook_event\x18\x03 \x01(\v2\x1c.gitstafette.v1.WebhookEventR\fwebhookEvent\"\\\n" +
	"\x15WebhookEventsResponse\x12C\n" +
	"\x0ewebhook_events\x18\x01 \x03(\v2\x1c.gitstafette.v1.WebhookEventR\rwebhookEvents\"o\n" +
	"\fWebhookEvent\x12\x19\n" +
	"\bevent_id\x18\x01 \x01(\tR\aeventId\x12\x12\n" +
	"\x04body\x18\x02 \x01(\fR\x04body\x120\n" +
	"\aheaders\x18\x03 \x03(\v2\x16.gitstafette.v1.HeaderR\aheaders\"4\n" +
	"\x06Header\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x16\n" +
	"\x06values\x18\x02 \x01(\tR\x06values2\xc1\x03\n" +
	"\vGitstafette\x12e\n" +
	"\x12FetchWebhookEvents\x12$.gitstafette.v1.WebhookEventsRequest\x1a%.gitstafette.v1.WebhookEventsResponse\"\x000\x01\x12g\n" +
	"\x10WebhookEventPush\x12'.gitstafette.v1.WebhookEventPushRequest\x1a(.gitstafette.v1.WebhookEventPushResponse\"\x00\x12m\n" +
	"\x12WebhookEventStatus\x12).gitstafette.v1.WebhookEventStatusRequest\x1a*.gitstafette.v1.WebhookEventStatusResponse\"\x00\x12s\n" +
	"\x14WebhookEventStatuses\x12+.gitstafette.v1.WebhookEventStatusesRequest\x1a*.gitstafette.v1.WebhookEventStatusResponse\"\x000\x01B4Z2github.com/joostvdg/gitstafette/api/gitstafette_v1b\x06proto3"

var (
	file_api_v1_gitstafette_proto_rawDescOnce sync.Once
	file_api_v1_gitstafette_proto_rawDescData []byte
)

func file_api_v1_gitstafette_proto_rawDescGZIP() []byte {
	file_api_v1_gitstafette_proto_rawDescOnce.Do(func() {
		file_api_v1_gitstafette_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_v1_gitstafette_proto_rawDesc), len(file_api_v1_gitstafette_proto_rawDesc)))
	})
	return file_api_v1_gitstafette_proto_rawDescData
}

var file_api_v1_gitstafette_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_api_v1_gitstafette_proto_goTypes = []any{
	(*WebhookEventStatusRequest)(nil),   // 0: gitstafette.v1.WebhookEventStatusRequest
	(*WebhookEventStatusesRequest)(nil), // 1: gitstafette.v1.WebhookEventStatusesRequest
	(*WebhookEventStatusResponse)(nil),  // 2: gitstafette.v1.WebhookEventStatusResponse
	(*WebhookEventsRequest)(nil),        // 3: gitstafette.v1.WebhookEventsRequest
	(*WebhookEventPushResponse)(nil),    // 4: gitstafette.v1.WebhookEventPushResponse
	(*WebhookEventPushRequest)(nil),     // 5: gitstafette.v1.WebhookEventPushRequest
	(*WebhookEventsResponse)(nil),       // 6: gitstafette.v1.WebhookEventsResponse
	(*WebhookEvent)(nil),                // 7: gitstafette.v1.WebhookEvent
	(*Header)(nil),                      // 8: gitstafette.v1.Header
}
var file_api_v1_gitstafette_proto_depIdxs = []int32{
	7, // 0: gitstafette.v1.WebhookEventPushRequest.webhook_event:type_name -> gitstafette.v1.WebhookEvent
	7, // 1: gitstafette.v1.WebhookEventsResponse.webhook_events:type_name -> gitstafette.v1.WebhookEvent
	8, // 2: gitstafette.v1.WebhookEvent.headers:type_name -> gitstafette.v1.Header
	3, // 3: gitstafette.v1.Gitstafette.FetchWebhookEvents:input_type -> gitstafette.v1.WebhookEventsRequest
	5, // 4: gitstafette.v1.Gitstafette.WebhookEventPush:input_type -> gitstafette.v1.WebhookEventPushRequest
	0, // 5: gitstafette.v1.Gitstafette.WebhookEventStatus:input_type -> gitstafette.v1.WebhookEventStatusRequest
	1, // 6: gitstafette.v1.Gitstafette.WebhookEventStatuses:input_type -> gitstafette.v1.WebhookEventStatusesRequest
	6, // 7: gitstafette.v1.Gitstafette.FetchWebhookEvents:output_type -> gitstafette.v1.WebhookEventsResponse
	4, // 8: gitstafette.v1.Gitstafette.WebhookEventPush:output_type -> gitstafette.v1.WebhookEventPushResponse
	2, // 9: gitstafette.v1.Gitstafette.WebhookEventStatus:output_type -> gitstafette.v1.WebhookEventStatusResponse
	2, // 10: gitstafette.v1.Gitstafette.WebhookEventStatuses:output_type -> gitstafette.v1.WebhookEventStatusResponse
	7, // [7:11] is the sub-list for method output_type
	3, // [3:7] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_api_v1_gitstafette_proto_init() }
func file_api_v1_gitstafette_proto_init() {
	if File_api_v1_gitstafette_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_v1_gitstafette_proto_rawDesc), len(file_api_v1_gitstafette_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_v1_gitstafette_proto_goTypes,
		DependencyIndexes: file_api_v1_gitstafette_proto_depIdxs,
		MessageInfos:      file_api_v1_gitstafette_proto_msgTypes,
	}.Build()
	File_api_v1_gitstafette_proto = out.File
	file_api_v1_gitstafette_proto_goTypes = nil
	file_api_v1_gitstafette_proto_depIdxs = nil
}
